name: eShopOnWeb Build, Test, Deploy

on: [push, pull_request, workflow_dispatch]

permissions:
  id-token: write
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
        include-prerelease: true

    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release

    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration Release

  deploy_aks:
    needs: [build]
    uses: ./.github/workflows/deploy_aks.yml
    with:
      resourceGroupName: 'cnny-week3'
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_USER_OBJECT_ID: ${{ secrets.AZURE_USER_OBJECT_ID }}

  publish_container_image:
    needs: [deploy_aks]
    uses: ./.github/workflows/publish_container_image.yml
    with:
      containerRegistryName: ${{ needs.deploy_aks.outputs.containerRegistryName }}
      containerRegistryUrl: ${{ needs.deploy_aks.outputs.containerRegistryUrl }}
      githubSha: ${{ github.sha }}
      dnsZoneName: ${{ needs.deploy_aks.outputs.dnsZoneName }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  deploy_to_aks:
    needs: [publish_container_image, deploy_aks]
    uses: ./.github/workflows/deploy_to_aks.yml
    with:
      resourceGroupName: ${{ needs.deploy_aks.outputs.resourceGroupName }}
      containerRegistryUrl: ${{ needs.deploy_aks.outputs.containerRegistryUrl }}
      aksName: ${{ needs.deploy_aks.outputs.aksName }}
      githubSha: ${{ github.sha }}
      serviceAccount: ${{ needs.deploy_aks.outputs.serviceAccount }}
      managedIdentityClientId: ${{ needs.deploy_aks.outputs.managedIdentityClientId }}
      akvName: ${{ needs.deploy_aks.outputs.akvName }}
      tlsCertificateUri: ${{ needs.deploy_aks.outputs.tlsCertificateUri }}
      dnsZoneName: ${{ needs.deploy_aks.outputs.dnsZoneName }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}