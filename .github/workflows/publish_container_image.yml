name: Publish Container Images

on: 
  workflow_call:
    inputs:
      containerRegistryName:
        required: true
        type: string
      containerRegistryUrl:
        required: true
        type: string
      githubSha:
        required: true
        type: string
      dnsZoneName:
        required: true
        type: string
      akvName:
        required: true
        type: string
      certName:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  publish_container_image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Update BlazorAdmin apiBase URL
      run: |
        find . -name "appsettings*.json" -exec sed -i -e "s/localhost:5099/${{ inputs.dnsZoneName }}/g" \
            -e "s/localhost:44315/${{ inputs.dnsZoneName }}/g" {} \;
    - name: docker build
      run: |
        docker build . -f src/Web/Dockerfile -t ${{ inputs.containerRegistryUrl }}/web:${{ inputs.githubSha }}
        docker build . -f src/PublicApi/Dockerfile -t ${{ inputs.containerRegistryUrl }}/api:${{ inputs.githubSha}}
    - name: scan web container image
      uses: Azure/container-scan@v0
      with:
        image-name: ${{ inputs.containerRegistryUrl }}/web:${{ inputs.githubSha}}
    - name: scan api container image
      uses: Azure/container-scan@v0
      with:
        image-name: ${{ inputs.containerRegistryUrl }}/web:${{ inputs.githubSha}}
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: acr login 
      run: az acr login --name ${{ inputs.containerRegistryName  }}
    - name: docker push
      run: |
        docker push ${{ inputs.containerRegistryUrl }}/web:${{ inputs.githubSha}}
        docker push ${{ inputs.containerRegistryUrl }}/api:${{ inputs.githubSha}}
    - name: Get Signing Cert Key ID & Notation Credentials
      id: kid
      run: |
        keyID=$(az keyvault certificate show \
          --vault-name ${{ inputs.akvName }} --name ${{ inputs.certName }} \
          --query "kid" --only-show-errors --output tsv)

        tokenPassword=$(az acr token create \
          --name "${{ inputs.certName }}" \
          --registry ${{ inputs.containerRegistryName }} \
          --scope-map _repositories_admin \
          --query 'credentials.passwords[0].value' \
          --only-show-errors \
          --output tsv)

        echo "SIGN_CERT_KEY_ID=${keyID}" >> $GITHUB_OUTPUT
        echo "NOTATION_USERNAME=${{ inputs.certName }}" >> $GITHUB_OUTPUT
        echo "NOTATION_PASSWORD=${tokenPassword}" >> $GITHUB_OUTPUT
    - name: Setup Notation with azure-kv plugin
      uses: Duffney/setup-notation@v0.12.0
      with:
        version: 1.0.0-rc.1
        key_name: ${{ inputs.certName }}
        certificate_key_id: ${{ steps.kid.outputs.SIGN_CERT_KEY_ID }}
        plugin_name: notation-azure-kv
        plugin_version: 0.5.0-rc.1
    - name: Sign Container Images
      run: |
        notation sign ${{ inputs.containerRegistryUrl }}/web:${{ inputs.githubSha}} \
          --username ${{ steps.kid.outputs.NOTATION_USERNAME}} \
          --password ${{ steps.kid.outputs.NOTATION_PASSWORD}}
        notation sign ${{ inputs.containerRegistryUrl }}/api:${{ inputs.githubSha}} \
          --username ${{ steps.kid.outputs.NOTATION_USERNAME}} \
          --password ${{ steps.kid.outputs.NOTATION_PASSWORD}}
